syntax = "proto3";
option go_package = "./;proto";
package proto;

message Product {
  int32 id = 1;
  string name = 2;
  int32 startingPrice = 3;
  string mainPicture = 4;
  map<string, string> labelList = 5;
  int32 singleBuyLimit = 6;
  string token = 7;
  bool isEnable = 8;
  int32 productType = 9;
}

message PageReq {
  int32 length = 1;
  int32 pageIndex = 2;
}

message PageResp {
  repeated Product product = 1;
  int64 total = 2;
  int64 rows = 3;
}

service Page {
  rpc Page (PageReq) returns (PageResp){}
}

message ProductDetail {
  int32 id = 1;
  string name = 2;
  int32 productType = 3;
  int32  categoryId = 4;
  float startingPrice = 5;
  int32  totalStock = 6;
  string mainPicture = 7;
  float  remoteAreaPostage = 8;
  int32 singleBuyLimit = 9;
  bool    isEnable = 10;
  string remark = 11;
  int32   createUser = 12 ;
  string  createTime = 13;  //go get google.golang.org/protobuf/ptypes/timestamp
  int32   updateUser = 14;
  string updateTime = 15;
  bool    IsDeleted = 16;
  string detail = 17;
  string     pictureList = 18;
}

//请求 request struct
message ProductDetailReq {
  int32 id = 1;
}

//响应 resp struct
message ProductDetailResp{
  repeated ProductDetail productDetail = 1;
}

service ShowProductDetail {
  //rpc 服务
  rpc ShowProductDetail (ProductDetailReq) returns (ProductDetailResp){}
}

message ProductSku {
  int32 skuId = 1;
  string name = 2;
  string attributeSymbolList = 3;
  float  sellPrice = 4;
  int32 stock = 5;
}
//请求 request struct
message ProductSkuReq {
  int32 productId = 1;
}
//响应 resp struct
/**

**/
message ProductSkuResp{
  repeated ProductSku productSku = 1;
}
//RPC 服务 接口
service ShowProductSku {
  //rpc 服务
  rpc ShowProductSku (ProductSkuReq) returns (ProductSkuResp){}
}

//商品库存详情 服务 接口
service ShowDetailSku {
  //rpc 服务
  rpc ShowDetailSku (ProductDetailReq) returns (ProductSkuResp){}
}

message UpdateSkuReq{
  ProductSku productSku = 1;
}
message UpdateSkuResp {
  bool isSuccess = 1;
}
service UpdateSku {
  rpc UpdateSku (UpdateSkuReq) returns (UpdateSkuResp){}
}















